name: Deploy Stack

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
    - .github/workflows/deploy_stack.yml
    - src/lambda/**
    - deploy/config/**

jobs:
  deploy:
    name: Deploy Stack to AWS
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_SERVICE_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SERVICE_SECRET_KEY }}
        aws-region: eu-west-1

    - name: Configure environment name
      id: env-name
      env:
        REPO: ${{ github.repository }}
      run: |
        ENVIRONMENT=`echo $REPO | tr "/" "-"`
        echo "Environment name: $ENVIRONMENT"
        echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
        ls

    - name: Get Lambda Code
      id: get_lambda_code
      run:

        echo "LAMBDA_CODE='$(<src/lambda/trigger.py)'" >> $GITHUB_OUTPUT

    - name: Print Lambda Code
      id: print_lambda_code
      run:
        echo "${{ steps.get_lambda_code.outputs.LAMBDA_CODE }}""

    - name: Deploy Amazon Stack
      id: stack-deploy
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: sagemaker-train-ecr
        template: deploy/config/stack.yml
        parameter-overrides: >-
          IAMUserName=${{ secrets.AWS_SERVICE_USER_NAME }},
          TriggerLambdaCode="${{ steps.get_lambda_code.outputs.LAMBDA_CODE }}""
        no-fail-on-empty-changeset: '1'
