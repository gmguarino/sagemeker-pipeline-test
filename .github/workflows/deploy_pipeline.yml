name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
    - .github/workflows/deploy_pipeline.yml
    - deploy/pipeline/**
    - train/**

env:
  TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_SERVICE_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SERVICE_SECRET_KEY }}
        aws-region: eu-west-1
    - name: ECR Login
      id: ecr-login
      run: |
        aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 141502667606.dkr.ecr.eu-west-1.amazonaws.com

    - name: Build the Docker images
      id: build
      run: |
        docker build . --file train/Dockerfiles/preprocess.Dockerfile --tag 436376758376.dkr.ecr.eu-west-1.amazonaws.com/sagemaker/example-train-pipeline:preprocess
        docker build . --file train/Dockerfiles/train.Dockerfile --tag 436376758376.dkr.ecr.eu-west-1.amazonaws.com/sagemaker/example-train-pipeline:train
        docker build . --file train/Dockerfiles/evaluate.Dockerfile --tag 436376758376.dkr.ecr.eu-west-1.amazonaws.com/sagemaker/example-train-pipeline:evaluate

    - name: Push the Docker images
      id: push-image
      run: |
        aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 436376758376.dkr.ecr.eu-west-1.amazonaws.com
        docker push 436376758376.dkr.ecr.eu-west-1.amazonaws.com/sagemaker/example-train-pipeline:preprocess
        docker push 436376758376.dkr.ecr.eu-west-1.amazonaws.com/sagemaker/example-train-pipeline:train
        docker push 436376758376.dkr.ecr.eu-west-1.amazonaws.com/sagemaker/example-train-pipeline:evaluate
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_SERVICE_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SERVICE_SECRET_KEY }}
        aws-region: eu-west-1

    - name: Install Dependencies
      id: pip-install
      run: pip install -r deploy/pipeline/requirements.txt

    - name: Parse Env File
      id: parse_env
      uses: xom9ikk/dotenv@v2
      with:
        path: deploy/pipeline
        load-mode: strict


    - name: Create Model ID
      id: create_model_id
      run: |
        MODEL_ID="echo $(echo $RANDOM | md5sum | head -c 20)"
        echo "MODEL_ID=$MODEL_ID" >> "$GITHUB_ENV"

    - name: Upsert Pipeline
      id: upsert_pipeline
      run: |
        python deploy/pipeline/get_pipeline.py \
          --model-id "$MODEL_ID" \
          --preprocess-job-name "$PREPROCESS_JOB_NAME" \
          --preprocess-step-name "$PREPROCESS_STEP_NAME" \
          --preprocess-entry-point "$PREPROCESS_ENTRY_POINT" \
          --train-step-name "$TRAIN_STEP_NAME" \
          --train-entry-point "$TRAIN_ENTRY_POINT" \
          --train-source-dir "$TRAIN_SOURCE_DIR" \
          --evaluate-job-name "$EVALUATE_JOB_NAME" \
          --evaluate-entry-point "$EVALUATE_ENTRY_POINT" \
          --evaluate-step-name "$EVALUATE_STEP_NAME" \
          --prefix "$S3_PREFIX" \
          --base-job-prefix "$BASE_JOB_PREFIX" \
          --model-package-group-name "$MODEL_PACKAGE_GROUP_NAME" \
          --pipeline-name "$PIPELINE_NAME"
